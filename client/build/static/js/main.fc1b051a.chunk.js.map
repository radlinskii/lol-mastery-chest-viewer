{"version":3,"sources":["constants.js","hooks/useSummoner.js","components/ChampionList/ChampionList.js","components/ChampionList/index.js","components/HomePage/HomePage.js","components/HomePage/index.js","App.js","serviceWorker.js","index.js"],"names":["D_DRAGON_URL","mergeChampionsData","championsMap","summoner","champions","map","champ","championId","fetchChampionsJSON","a","url","fetch","response","ok","json","Object","values","data","reduce","acc","key","Error","fetchMasteryChest","value","method","body","JSON","stringify","Promise","all","summonerData","name","profileIconId","status","console","error","useSummoner","useState","setSummoner","setError","loading","setLoading","useEffect","undefined","fetchSummoner","useCallback","results","useStyles","makeStyles","tableHeadCell","fontWeight","React","ChampionList","memo","classes","TableContainer","component","Paper","elevation","Table","aria-label","TableHead","className","TableRow","TableCell","align","TableBody","champion","id","Avatar","alt","src","chestGranted","championLevel","championPoints","button","marginLeft","header","display","alignItems","margin","container","padding","avatar","HomePage","initialValue","setValue","handleClick","search","URLSearchParams","window","location","set","toString","Card","raised","Box","p","mb","TextField","type","onChange","event","target","placeholder","disabled","onKeyDown","Button","variant","color","onClick","message","Divider","Typography","App","summonerName","get","Container","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.fc1b051a.chunk.js","sourcesContent":["export const SUMMONER_SEARCH_PARAM = 'summonerName';\nexport const PATCH_VERSION = '10.20.1';\nexport const D_DRAGON_URL = `https://ddragon.leagueoflegends.com/cdn/${PATCH_VERSION}`;\n","import { useCallback, useEffect, useState } from 'react';\nimport { D_DRAGON_URL } from '../constants';\n\nfunction mergeChampionsData(championsMap, summoner) {\n    return summoner.champions.map((champ) => ({\n        ...champ,\n        ...championsMap[champ.championId],\n    }));\n}\n\nasync function fetchChampionsJSON() {\n    const url = `${D_DRAGON_URL}/data/en_US/champion.json`;\n    const response = await fetch(url);\n\n    if (response.ok) {\n        const json = await response.json();\n\n        const champions = Object.values(json.data);\n        return champions.reduce((acc, champ) => ({\n            ...acc,\n            [ champ.key ]: champ,\n        }), {});\n    }\n\n    throw new Error(`Error fetching champions.json from Riot API, url: ${url}`);\n}\n\nasync function fetchMasteryChest(value) {\n    const response = await fetch('/form', {\n        method: 'POST',\n        body: JSON.stringify(value),\n    });\n\n    if (response.ok) {\n        const [summonerData, championsMap] = await Promise.all([response.json(), fetchChampionsJSON()]);\n\n        return {\n            name: summonerData.name,\n            profileIconId: summonerData.profileIconId,\n            champions: mergeChampionsData(championsMap, summonerData),\n        };\n    } else if (response.status === 404) {\n        throw new Error(`Summoner with name \"${value}\" not found :(`);\n    } else {\n        console.error(response);\n        throw new Error(`Error occurred. Status: ${response.status}`);\n    }\n}\n\nconst useSummoner = (value) => {\n    const [summoner, setSummoner] = useState();\n    const [error, setError] = useState();\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        setError(undefined);\n    }, [summoner])\n\n    const fetchSummoner = useCallback(  async () => {\n        try {\n            setSummoner(undefined);\n            setLoading(true);\n            const results = await fetchMasteryChest(value);\n            setLoading(false);\n\n            setSummoner(results);\n        } catch (e) {\n            setLoading(false);\n            console.error(e);\n            setError(e);\n        }\n    }, [value]);\n\n    return { fetchSummoner, summoner, error, loading };\n};\n\nexport default useSummoner;\n","import React from 'react';\nimport {\n    Paper,\n    TableContainer,\n    Table,\n    TableHead,\n    TableRow,\n    TableCell,\n    TableBody,\n    Avatar,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { D_DRAGON_URL } from '../../constants';\n\nconst useStyles = makeStyles({\n    tableHeadCell: {\n        fontWeight: 900,\n    },\n});\n\nfunction ChampionList({ champions }) {\n    const classes = useStyles();\n\n    return (\n        <TableContainer component={Paper} elevation={0}>\n            <Table aria-label=\"customized table\">\n                <TableHead className={classes.tableHeadCell}>\n                    <TableRow>\n                        <TableCell className={classes.tableHeadCell} align=\"left\" />\n                        <TableCell className={classes.tableHeadCell} align=\"left\">Champion</TableCell>\n                        <TableCell className={classes.tableHeadCell} align=\"center\">Mastery Chest Available</TableCell>\n                        <TableCell className={classes.tableHeadCell} align=\"center\">Mastery Level</TableCell>\n                        <TableCell className={classes.tableHeadCell} align=\"center\">Champion Points</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {champions.map((champion) => (\n                        <TableRow key={champion.id}>\n                            <TableCell align=\"left\">\n                                <Avatar\n                                    alt={`${champion.id} avatar`}\n                                    src={`${D_DRAGON_URL}/img/champion/${champion.id}.png`}\n                                />\n                            </TableCell>\n                            <TableCell align=\"left\">{champion.id}</TableCell>\n                            <TableCell align=\"center\">{champion.chestGranted ? \"false\" : \"true\"}</TableCell>\n                            <TableCell align=\"center\">{champion.championLevel}</TableCell>\n                            <TableCell align=\"center\">{champion.championPoints}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n\nexport default React.memo(ChampionList);\n","import ChampionList from './ChampionList';\n\nexport default ChampionList;\n","import React, { useEffect, useState } from 'react';\nimport useSummoner from '../../hooks/useSummoner'\nimport { D_DRAGON_URL, SUMMONER_SEARCH_PARAM } from '../../constants';\nimport ChampionList from '../ChampionList';\nimport {\n\tTextField,\n\tButton,\n\tBox,\n\tAvatar,\n\tCard,\n\tDivider,\n\tTypography,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n\tbutton: {\n\t\tmarginLeft: '20px',\n\t},\n\theader: {\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tmargin: '20px 0',\n\t},\n\tcontainer: {\n\t\tpadding: '20px',\n\t\tmargin: '20px 0',\n\t},\n\tavatar: {\n\t\tmarginLeft: '10px',\n\t},\n});\n\nfunction HomePage({ value: initialValue }) {\n\tconst classes = useStyles();\n    const [value, setValue] = useState(initialValue);\n    const {fetchSummoner, summoner, error, loading} = useSummoner(value);\n\n    useEffect(() => {\n    \tif (!!initialValue && value === initialValue) {\n\t\t\tfetchSummoner();\n\t\t}\n\t}, [value, fetchSummoner, initialValue])\n\n    const handleInputChange = (event) => {\n        setValue(event.target.value);\n    };\n\n    const handleClick = () => {\n\t\tfetchSummoner();\n\n\t\tconst search = new URLSearchParams(window.location.search);\n\t\tsearch.set(SUMMONER_SEARCH_PARAM, value);\n\t\twindow.location.search = search.toString();\n\t}\n\n\tconst handleEnterPress = (event) => {\n\t\tif (event.key === \"Enter\") {\n\t\t\thandleClick();\n\t\t}\n\t}\n\n    return (\n\t\t<Card className={classes.container} raised >\n\t\t\t<Box p={2} mb={2} >\n\t\t\t\t<TextField\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\tplaceholder=\"Summoner's name\"\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tdisabled={loading}\n\t\t\t\t\tonKeyDown={handleEnterPress}\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\tdisabled={loading}>\n\t\t\t\t\tSubmit\n\t\t\t\t</Button>\n\t\t\t</Box>\n\t\t\t{summoner === undefined && !loading && error?.message !== undefined && (\n\t\t\t\t<>\n\t\t\t\t\t<Divider />\n\t\t\t\t\t<Box className={classes.header}>\n\t\t\t\t\t\t<Typography variant=\"h3\" component=\"h2\" color=\"error\" >\n\t\t\t\t\t\t\t{error.message}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Divider />\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t{summoner === undefined && loading && error?.message === undefined && (\n\t\t\t\t<>\n\t\t\t\t\t<Divider />\n\t\t\t\t\t<Box className={classes.header}>\n\t\t\t\t\t\t<Typography variant=\"h3\" component=\"h2\">\n\t\t\t\t\t\t\tLoading...\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Divider />\n\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t{summoner !== undefined && !loading && error?.message === undefined && (\n\t\t\t\t<>\n\t\t\t\t\t<Divider />\n\t\t\t\t\t<Box className={classes.header}>\n\t\t\t\t\t\t<Typography variant=\"h3\" component=\"h2\">\n\t\t\t\t\t\t\tHi {summoner.name}!\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\tclassName={classes.avatar}\n\t\t\t\t\t\t\talt={`${summoner.name} avatar`}\n\t\t\t\t\t\t\tsrc={`${D_DRAGON_URL}/img/profileicon/${summoner.profileIconId}.png`}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Box>\n\t\t\t\t\t<ChampionList champions={summoner.champions} />\n\t\t\t\t</>\n\t\t\t)}\n\t\t</Card>\n\t);\n}\n\nexport default HomePage;\n","import HomePage from './HomePage';\n\nexport default HomePage;\n","import React from 'react';\nimport HomePage from './components/HomePage';\nimport { SUMMONER_SEARCH_PARAM } from './constants';\nimport { Container, Typography } from '@material-ui/core';\n\nfunction App() {\n\tconst currentParams = new URLSearchParams(window.location.search);\n\tconst summonerName = currentParams.get(SUMMONER_SEARCH_PARAM);\n\n\treturn (\n\t\t<Container >\n\t\t\t<Typography variant=\"h2\" component=\"h1\">\n\t\t\t\tLoL Mastery Chest Viewer\n\t\t\t</Typography>\n\t\t\t<HomePage value={summonerName}/>\n\t\t</Container>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}